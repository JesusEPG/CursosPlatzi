-	Definiendo filas y columnas
		
		display: grid;
		grid-template-columns: repeat(4, 1fr);
		grid-template-rows: repeat(2, 300px);
		/*grid-template: filas / columnas */
		/*grid-template: repeat(2, 300px) / repeat(4, 1fr) */

-	Dar estilo a un elemento de una serie de elementos

		.item:nth-of-type(4) {
			background-color: blue;
			overflow: auto;
			display: grid;
			grid-template-rows: 1fr 1fr 1fr;
		}

-	Nombre de grid lines

		AL momento de definir filas o columnas se pueden definir el nombre de esa linea con []. Al usar repeat se puede usar de la siguiente manera:

			.container {
				height: 100vh;
				display: grid;
				grid-template-columns: repeat(7, [col-start] 1fr [col-end]);
				grid-template-rows: repeat(6, 1fr);
				grid-gap: 30px;

			}

			.item-1 {
				background-color: black;
				/*grid-area: header;*/
				grid-column: col-start 1 / col-end 7;
				grid-row: 1 / 5;
			}

-	Grid implicito

		Por default la ubicacion de los elementos del grid implicito esta seteado a row, es decir: 
			
			//Dafault
			grid-auto-flow: row;

			//Se puede cambiar a
			grid-auto-flow: column

		Para manjera el grid implicito:

			grid-auto-columns: 200px 50px;
			grid-auto-rows: 200px 50px;

		Algo importante a destacar es que las filas y columnas definidas para el grid implicito en verdad forman un patrom para los ejemplos definido arriba primero tendriamos una fila 200px, si se necesita otra fila esta seria de 50px, y si se necesita otra mas se vuelve a 200px.

-	Alineacion de contenido y items

		Cuando se necesita alinear todos los items del grid:

			/* justify-items: stretch (default) start end center; */
			/* align-items: stretch (default) start end center; */
		
		Cuando se quiere alinear un solo elemento del grid:

			justify-self
			align-self

-	Alineando grid

		justify-content: stretch start(default) end center space-around space-between space-evenly;
		align-content: stretch start(default) end center space-around space-between space-evenly;

---------------------------------------------------------------------------------------------------------------------

-	Instagram

		Para dar efectos de opacidad y mostrar ciertos elementos en el hover, se puede agregar el html pero se tiene por default en display none para que no se muestre, y se utiliza un position absolute para que cubra todo el espacio. A continuacion un ejemplo:

			.post-overlay {
				background:  rgba(0,0,0, .4);
				position: absolute;
				left: 0;
				right: 0;
				top: 0;
				bottom: 0;
				display: none;

				align-items: center;
				justify-content: center;
				color: white;
				text-align: center;
			}

		Luego utilizamos el hover mas la clase del componente que queremos mostrar y le asignamos un display que lo haga visible:

			.post:hover .post-overlay {
				display: flex;
			}